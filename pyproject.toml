[project]
name = "crypto-skills-mcp"
version = "1.0.0"
description = "Multi-Agent cryptocurrency investment analysis system with MCP integration"
authors = [{name = "Crypto Skills Team", email = "team@crypto-skills.dev"}]
license = {text = "MIT"}
requires-python = ">=3.10"
readme = "README.md"

dependencies = [
    "anthropic>=0.18.0",
    "pyyaml>=6.0",
    "httpx>=0.24.0",
    "pydantic>=2.0.0",
]

[project.optional-dependencies]
skills = [
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "ta-lib>=0.4.0",
    "scipy>=1.10.0",
    "requests>=2.31.0",
]

agents = [
    "langchain>=0.1.0",
    "langgraph>=0.1.0",
]

mcp = [
    "mcp>=1.2.0",
    "websockets>=12.0",
]

all = [
    "crypto-skills-mcp[skills,agents,mcp]",
]

dev = [
    "pytest>=7.4.0",
    "black>=23.0.0",
    "mypy>=1.5.0",
    "ruff>=0.1.0",
    "pytest-asyncio>=0.21.0",
]

[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]
include = ["agents*"]

[tool.black]
line-length = 100
target-version = ['py310']

[tool.ruff]
line-length = 100
target-version = "py310"

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
