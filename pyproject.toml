[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "crypto-skills-mcp"
version = "1.0.0"
requires-python = ">=3.10"
description = "Hybrid Claude Skills + Agents crypto analysis system with 60-65% token reduction"
readme = "README.md"
authors = [
    {name = "Crypto Skills Development Team", email = "contact@crypto-skills.dev"}
]
keywords = ["cryptocurrency", "investment", "analysis", "mcp", "model-context-protocol", "claude", "ai-agents", "skills"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Financial and Insurance Industry",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
    "Framework :: AsyncIO",
]
dependencies = [
    "aiohttp>=3.8.0",
    "typing-extensions>=4.0.0",
    "pydantic>=2.0.0",
    "python-dotenv>=1.0.0",
    "requests>=2.31.0",
]

[project.urls]
"Bug Reports" = "https://github.com/yourusername/crypto-skills-mcp/issues"
"Source" = "https://github.com/yourusername/crypto-skills-mcp"
"Documentation" = "https://github.com/yourusername/crypto-skills-mcp#readme"

[project.optional-dependencies]
test = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.10.0",
]
lint = [
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
]
skills = [
    "numpy>=1.24.0",
    "pandas>=2.0.0",
]
agents = [
    "pydantic>=2.0.0",
    "typing-extensions>=4.0.0",
]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.10.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
]
all = [
    # Test dependencies
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.10.0",
    # Lint dependencies
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    # Skills dependencies
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    # Agent dependencies (pydantic and typing-extensions already in main dependencies)
]

[tool.setuptools.packages.find]
where = ["."]
include = ["agents*"]

[tool.black]
line-length = 100
target-version = ['py310', 'py311', 'py312']

[tool.ruff]
line-length = 100
target-version = "py310"

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
check_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
markers = [
    "integration: marks tests as integration tests (deselect with '-m \"not integration\"')",
]
